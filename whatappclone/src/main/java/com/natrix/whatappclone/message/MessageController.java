package com.natrix.whatappclone.message;import io.swagger.v3.oas.annotations.Parameter;import io.swagger.v3.oas.annotations.tags.Tag;import lombok.RequiredArgsConstructor;import org.springframework.http.HttpStatus;import org.springframework.http.ResponseEntity;import org.springframework.security.core.Authentication;import org.springframework.web.bind.annotation.*;import org.springframework.web.multipart.MultipartFile;@RestController@RequiredArgsConstructor@RequestMapping("/api/v1/messages")@Tag(name = "Message")public class MessageController {    private final MessageService messageService;    @PostMapping    @ResponseStatus(HttpStatus.CREATED)    public void saveMessage(@RequestBody MessageRequest messageRequest){        this.messageService.saveMessage(messageRequest);    }    @PostMapping(value = "/upload-media", consumes = "multipart/form-data")    @ResponseStatus(HttpStatus.CREATED)    public void uploadMedia(@RequestParam("chat-id") String chatId,                            @Parameter()                            @RequestParam("file")MultipartFile file,                            Authentication authentication){        this.messageService.uploadMediaMessage(chatId, file, authentication);    }    @PatchMapping    @ResponseStatus(HttpStatus.ACCEPTED)    public void setMessageToSeen(@RequestParam("chat-id") String chatId,                                 Authentication authentication){        this.messageService.setMessagesToSeen(chatId, authentication);    }    @GetMapping("/chat/{chat-id}")    public ResponseEntity<?> getMessages(@PathVariable("chat-id") String chatId){        return  ResponseEntity.ok(this.messageService.findChatMessages(chatId));    }}